"use strict";(self.webpackChunkguide=self.webpackChunkguide||[]).push([[266],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=s(r),h=n,f=g["".concat(c,".").concat(h)]||g[h]||u[h]||i;return r?o.createElement(f,a(a({ref:t},p),{},{components:r})):o.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[g]="string"==typeof e?e:n,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},5617:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=r(7462),n=(r(7294),r(3905));const i={title:"Launch MailHog",description:"Deploy our first service, MailHog SMTP Test Tool",sidebar_position:4},a="Launch MailHog",l={unversionedId:"part-one-global-svc/launch-mailhog",id:"part-one-global-svc/launch-mailhog",title:"Launch MailHog",description:"Deploy our first service, MailHog SMTP Test Tool",source:"@site/docs/part-one-global-svc/launch-mailhog.md",sourceDirName:"part-one-global-svc",slug:"/part-one-global-svc/launch-mailhog",permalink:"/icc2023-docker-workshop/docs/part-one-global-svc/launch-mailhog",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Launch MailHog",description:"Deploy our first service, MailHog SMTP Test Tool",sidebar_position:4},sidebar:"guideSidebar",previous:{title:"Setup Traefik",permalink:"/icc2023-docker-workshop/docs/part-one-global-svc/bringing-up-traefik"},next:{title:"Launching Portainer",permalink:"/icc2023-docker-workshop/docs/part-one-global-svc/portainer"}},c={},s=[{value:"Checking its registration in Traefik",id:"checking-its-registration-in-traefik",level:2},{value:"Fixing the Traefik service configuration for Mailhog",id:"fixing-the-traefik-service-configuration-for-mailhog",level:2}],p={toc:s},g="wrapper";function u(e){let{components:t,...i}=e;return(0,n.kt)(g,(0,o.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"launch-mailhog"},"Launch MailHog"),(0,n.kt)("p",null,"Another service from our global stack that we'll bring up behind our Reverse Proxy is MailHog, a convenient e-mail testing tool.  Run the following from your integrated terminal in VSCode.  It should be running after bringing up the global stack for Traefik in the previous section.  Since Docker Compose is somewhat idempotent, you can always re-run a ",(0,n.kt)("inlineCode",{parentName:"p"},"docker compose up -d")," from the ",(0,n.kt)("inlineCode",{parentName:"p"},"global")," folder to make sure."),(0,n.kt)("h2",{id:"checking-its-registration-in-traefik"},"Checking its registration in Traefik"),(0,n.kt)("p",null,"Next, let's check its registration in Traefik by inspecting the dashboard at ",(0,n.kt)("a",{parentName:"p",href:"http://proxy.localtest.me"},"http://proxy.localtest.me"),"."),(0,n.kt)("h2",{id:"fixing-the-traefik-service-configuration-for-mailhog"},"Fixing the Traefik service configuration for Mailhog"),(0,n.kt)("p",null,"Inspecting the service configuration, we see it picked the wrong port (",(0,n.kt)("inlineCode",{parentName:"p"},"1025"),") to route traffic to.  "),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Mailhog service definition",src:r(9819).Z,width:"970",height:"594"})),(0,n.kt)("p",null,"The reason for this is that Traefik will attempt to guess the proper port to use based on the set of exposed ports.  Let's take a look at the set of exposed ports by inspecting the ",(0,n.kt)("inlineCode",{parentName:"p"},"mailhog")," container's configuration:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker inspect -f '{{ .Config.ExposedPorts }}' mailhog\n\n# highlight-start\n# Returns:\n#  map[1025/tcp:{} 8025/tcp:{}]\n# highlight-end\n")),(0,n.kt)("p",null,"The Web UI for Mailhog listens on port ",(0,n.kt)("inlineCode",{parentName:"p"},"8025"),".  We can explicitly define it through some extra label definitions.  Update the ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and then redeploy with another ",(0,n.kt)("em",{parentName:"p"},"up")," command.  See the Traefik Docs reference on Docker ",(0,n.kt)("em",{parentName:"p"},"label")," configuration for Traefik services ",(0,n.kt)("a",{parentName:"p",href:"https://doc.traefik.io/traefik/routing/providers/docker/#services"},"here"),"."),(0,n.kt)("p",null,"Finally, verify that the service configuration looks correct, and you should then be able to see Mailhog at the following address:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://mailhog.localtest.me"},"http://mailhog.localtest.me")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Mailhog Web UI",src:r(7496).Z,width:"1399",height:"412"})))}u.isMDXComponent=!0},9819:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/mailhog-incorrect-port-8fc52991b3b954169970da3ff5d2fa9b.png"},7496:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/mailhog-init-063e3986af3acb7370a06093bad747f4.png"}}]);